/*
    Problem 1. Find Names of All Employees by First Name
*/

SELECT FirstName, LastName
FROM Employees
WHERE FirstName LIKE 'sa%'

/*
    Problem 2. Find Names of All Employees by Last Name
*/

SELECT FirstName, LastName
FROM Employees
WHERE LastName LIKE '%ei%'

/*
    Problem 3. Find First Names of All Employess
*/

SELECT FirstName
FROM Employees
WHERE DepartmentId IN(3, 10) AND DATEPART (YEAR, HireDate) BETWEEN 1995 AND 2005

/*
    Problem 4. Find All Employees Except Engineers
*/

SELECT FirstName, LastName
FROM Employees
WHERE JobTitle NOT LIKE '%engineer%'

/*
    Problem 5. Find Towns with Name Length
*/

SELECT Name
FROM Towns
WHERE LEN(Name) = 5 OR LEN(Name) = 6
ORDER BY Name

/*
    Problem 6. Find Towns Starting With
*/

SELECT TownId, Name
FROM Towns
WHERE Name LIKE '[MKBE]%'
ORDER BY Name

/*
    Problem 7. Find Towns Not Starting With
*/

SELECT TownId, Name
FROM Towns
WHERE Name LIKE '[^RBD]%'
ORDER BY Name

/*
    Problem 8. Create View Employees Hired After
*/

CREATE VIEW V_EmployeesHiredAfter2000 
AS
SELECT FirstName, LastName
FROM Employees
WHERE DATEPART (YEAR, HireDate) > 2000

/*
    Problem 9. Length of Last Name
*/

SELECT FirstName, LastName
FROM Employees
WHERE LEN(LastName) = 5

/*
    Problem 10. Rank Employees by Salary
*/

SELECT EmployeeId, FirstName, LastName, Salary,
DENSE_RANK() OVER (PARTITION BY Salary ORDER BY EmployeeId) AS [RANK]
FROM Employees
WHERE Salary BETWEEN 10000 AND 50000
ORDER BY Salary DESC

/*
    Problem 11. Find All Employees with Rank 2
*/

SELECT * FROM (SELECT EmployeeId, FirstName, LastName, Salary,
DENSE_RANK() OVER (PARTITION BY Salary ORDER BY EmployeeId) AS [RANK]
FROM Employees
WHERE Salary BETWEEN 10000 AND 50000) AS Temp
WHERE Temp.[Rank] = 2
ORDER BY Salary DESC

/*
    Problem 12. Countries Holding 'A'
*/

SELECT CountryName,
       IsoCode AS [ISO Code]
FROM Countries
WHERE CountryName LIKE '%a%a%a%'
ORDER BY IsoCode;
